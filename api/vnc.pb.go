// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: api/vnc.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VncStatus int32

const (
	VncStatus_STARTED VncStatus = 0
	VncStatus_DONE    VncStatus = 1
	VncStatus_FAILURE VncStatus = 2
)

// Enum value maps for VncStatus.
var (
	VncStatus_name = map[int32]string{
		0: "STARTED",
		1: "DONE",
		2: "FAILURE",
	}
	VncStatus_value = map[string]int32{
		"STARTED": 0,
		"DONE":    1,
		"FAILURE": 2,
	}
)

func (x VncStatus) Enum() *VncStatus {
	p := new(VncStatus)
	*p = x
	return p
}

func (x VncStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VncStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_vnc_proto_enumTypes[0].Descriptor()
}

func (VncStatus) Type() protoreflect.EnumType {
	return &file_api_vnc_proto_enumTypes[0]
}

func (x VncStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VncStatus.Descriptor instead.
func (VncStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_vnc_proto_rawDescGZIP(), []int{0}
}

type MediaType int32

const (
	MediaType_MP4  MediaType = 0
	MediaType_FLV  MediaType = 1
	MediaType_MPEG MediaType = 3
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "MP4",
		1: "FLV",
		3: "MPEG",
	}
	MediaType_value = map[string]int32{
		"MP4":  0,
		"FLV":  1,
		"MPEG": 3,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_vnc_proto_enumTypes[1].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_api_vnc_proto_enumTypes[1]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_api_vnc_proto_rawDescGZIP(), []int{1}
}

type VncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host      string     `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port      *int32     `protobuf:"varint,2,opt,name=port,proto3,oneof" json:"port,omitempty"`
	FileName  *string    `protobuf:"bytes,3,opt,name=fileName,proto3,oneof" json:"fileName,omitempty"`
	MediaType *MediaType `protobuf:"varint,4,opt,name=mediaType,proto3,enum=MediaType,oneof" json:"mediaType,omitempty"`
}

func (x *VncRequest) Reset() {
	*x = VncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_vnc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VncRequest) ProtoMessage() {}

func (x *VncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_vnc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VncRequest.ProtoReflect.Descriptor instead.
func (*VncRequest) Descriptor() ([]byte, []int) {
	return file_api_vnc_proto_rawDescGZIP(), []int{0}
}

func (x *VncRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *VncRequest) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *VncRequest) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *VncRequest) GetMediaType() MediaType {
	if x != nil && x.MediaType != nil {
		return *x.MediaType
	}
	return MediaType_MP4
}

type VncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  VncStatus `protobuf:"varint,1,opt,name=status,proto3,enum=VncStatus" json:"status,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *VncResponse) Reset() {
	*x = VncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_vnc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VncResponse) ProtoMessage() {}

func (x *VncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_vnc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VncResponse.ProtoReflect.Descriptor instead.
func (*VncResponse) Descriptor() ([]byte, []int) {
	return file_api_vnc_proto_rawDescGZIP(), []int{1}
}

func (x *VncResponse) GetStatus() VncStatus {
	if x != nil {
		return x.Status
	}
	return VncStatus_STARTED
}

func (x *VncResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_api_vnc_proto protoreflect.FileDescriptor

var file_api_vnc_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xad, 0x01, 0x0a, 0x0a, 0x56, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x09,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0a, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x48, 0x02, 0x52, 0x09, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x4b, 0x0a, 0x0b, 0x56, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a,
	0x2e, 0x56, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x2f, 0x0a, 0x09,
	0x56, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x02, 0x2a, 0x27, 0x0a,
	0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x50,
	0x34, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x4c, 0x56, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x4d, 0x50, 0x45, 0x47, 0x10, 0x03, 0x32, 0x7f, 0x0a, 0x0b, 0x56, 0x6e, 0x63, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x0b,
	0x2e, 0x56, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x56, 0x6e,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x04, 0x53,
	0x74, 0x6f, 0x70, 0x12, 0x0b, 0x2e, 0x56, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0c, 0x2e, 0x56, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x25, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x0b, 0x2e, 0x56, 0x6e, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x56, 0x6e, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1e, 0x0a, 0x16, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x6d, 0x61, 0x67, 0x6e, 0x6f, 0x6c, 0x69, 0x61, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x6e,
	0x63, 0x5a, 0x04, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_vnc_proto_rawDescOnce sync.Once
	file_api_vnc_proto_rawDescData = file_api_vnc_proto_rawDesc
)

func file_api_vnc_proto_rawDescGZIP() []byte {
	file_api_vnc_proto_rawDescOnce.Do(func() {
		file_api_vnc_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_vnc_proto_rawDescData)
	})
	return file_api_vnc_proto_rawDescData
}

var file_api_vnc_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_vnc_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_vnc_proto_goTypes = []interface{}{
	(VncStatus)(0),      // 0: VncStatus
	(MediaType)(0),      // 1: MediaType
	(*VncRequest)(nil),  // 2: VncRequest
	(*VncResponse)(nil), // 3: VncResponse
}
var file_api_vnc_proto_depIdxs = []int32{
	1, // 0: VncRequest.mediaType:type_name -> MediaType
	0, // 1: VncResponse.status:type_name -> VncStatus
	2, // 2: VncRecorder.Start:input_type -> VncRequest
	2, // 3: VncRecorder.Stop:input_type -> VncRequest
	2, // 4: VncRecorder.Remove:input_type -> VncRequest
	3, // 5: VncRecorder.Start:output_type -> VncResponse
	3, // 6: VncRecorder.Stop:output_type -> VncResponse
	3, // 7: VncRecorder.Remove:output_type -> VncResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_vnc_proto_init() }
func file_api_vnc_proto_init() {
	if File_api_vnc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_vnc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_vnc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_vnc_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_vnc_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_vnc_proto_goTypes,
		DependencyIndexes: file_api_vnc_proto_depIdxs,
		EnumInfos:         file_api_vnc_proto_enumTypes,
		MessageInfos:      file_api_vnc_proto_msgTypes,
	}.Build()
	File_api_vnc_proto = out.File
	file_api_vnc_proto_rawDesc = nil
	file_api_vnc_proto_goTypes = nil
	file_api_vnc_proto_depIdxs = nil
}
